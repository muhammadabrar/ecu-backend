generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByAggregateGroup"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int        @id @default(autoincrement())
  make      String     @db.VarChar(50)
  model     String?    @db.VarChar(50)
  engine    String?    @db.VarChar(50)
  power     String?    @db.VarChar(50)
  hw        String?    @db.VarChar(50)
  sw        String?    @db.VarChar(50)
  ecu       String?    @db.VarChar(50)
  price     Int?
  size      String?    @db.VarChar(50)
  file      String?    @db.VarChar(200)
  Tool_read String?    @db.VarChar(50)
  soldfile  soldfile[]
}

model model {
  id    Int    @id @default(autoincrement())
  model String @unique
}

model make {
  id   Int    @id @default(autoincrement())
  make String @unique
}

model engine {
  id     Int    @id @default(autoincrement())
  engine String @unique
}

model User {
  id     Int     @id @default(autoincrement())
  email  String  @unique
  name   String? @db.VarChar(45)
  pass   String? @db.VarChar(200)
  token  String? @db.VarChar(200)
  status Boolean @default(false)
}

model msgs {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(45)
  email   String? @db.VarChar(100)
  subject String? @db.VarChar(100)
  msg     String? @db.VarChar(500)
  month   Int?
  day     Int?
  date    Int?
  year    Int?
  time    String? @db.VarChar(500)

}

model visiter {
  id    Int    @id @default(autoincrement())
  ip    String @unique
  month Int?
  day   Int?
  date  Int?
  year  Int?
}

model tuningfiles {
  id       Int        @id @default(autoincrement())
  cat      cat        @relation(fields: [cat_id], references: [id])
  cat_id   Int
  title    String?    @db.VarChar(100)
  price    Int?
  ordersID ordersID[]
}

model cat {
  id          Int           @id @default(autoincrement())
  cat         String        @unique
  tuningfiles tuningfiles[]
}

model about {
  id    Int     @id @default(autoincrement())
  title String? @db.VarChar(100)
  image String? @db.VarChar(500)
  p     String? @db.VarChar(500)
  p2    String? @db.VarChar(500)
}

model faq {
  id Int     @id @default(autoincrement())
  Q  String? @db.VarChar(100)
  p  String? @db.VarChar(500)
}

model contact {
  id       Int     @id @default(autoincrement())
  email    String? @db.VarChar(100)
  facebook String? @db.VarChar(500)
  insta    String? @db.VarChar(500)
  whatsapp String? @db.VarChar(500)
  tweeter  String? @db.VarChar(500)
}

model feedback {
  id       Int     @id @default(autoincrement())
  name     String? @db.VarChar(100)
  company  String? @db.VarChar(500)
  feedback String? @db.VarChar(500)
  stars    Int?
}

model earn {
  id    Int     @id @default(autoincrement())
  earn  Int?
  title String? @db.VarChar(500)
  month Int?
  day   Int?
  date  Int?
  year  Int?
}

model soldfile {
  id      Int     @id @default(autoincrement())
  file    Post    @relation(fields: [file_id], references: [id])
  file_id Int
  buyer   String? @db.VarChar(500)
  amount  Int?
  month   Int?
  day     Int?
  date    Int?
  year    Int?
}

model orders {
  id       Int        @id @default(autoincrement())
  name     String?    @db.VarChar(500)
  des      String?    @db.VarChar(500)
  email    String?    @db.VarChar(100)
  file1    String?    @db.VarChar(100)
  file2    String?    @db.VarChar(100)
  price    Int?
  status   Boolean?   @default(false)
  month    Int?
  day      Int?
  date     Int?
  year     Int?
  time     String?    @db.VarChar(500)
  ordersID ordersID[]
}

model ordersID {
  id            Int         @id @default(autoincrement())
  tuningfile    tuningfiles @relation(fields: [tuningfile_id], references: [id])
  tuningfile_id Int
  order         orders      @relation(fields: [order_id], references: [id])
  order_id      Int
}
